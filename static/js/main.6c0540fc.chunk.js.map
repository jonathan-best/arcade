{"version":3,"sources":["components/joystick/index.js","components/button/index.js","components/invader/index.js","components/cabinet/index.js","games/scenes/bootScene.js","games/bullet.js","games/alien.js","games/scenes/gameScene.js","games/scenes/postScene.js","games/config/config.js","games/invaders.js","components/App.js","index.js"],"names":["Joystick","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setDirection","direction","setState","keyup","event","includes","keyCode","keydown","state","document","addEventListener","removeEventListener","react_default","a","createElement","className","concat","Component","Button","props","matrix","Invader","map","row","i","squares","variant","PureComponent","Cabinet","invader","children","joystick","components_button","BootScene","clientHeight","game","canvas","add","text","input","manager","enabled","cursors","keyboard","createCursorKeys","space","isDown","scene","start","Phaser","Scene","Bullet","Class","Extends","Physics","Arcade","Sprite","initialize","speed","born","fire","player","x","y","height","setPosition","Math","GetSpeed","update","time","delta","setActive","setVisible","Alien","width","path","Curves","Ellipse","pathIndex","pathSpeed","pathVector","Vector2","getPoint","die","anims","play","on","disableBody","preUpdate","Wrap","GameScene","key","load","image","spritesheet","frameWidth","frameHeight","sky","tileSprite","create","frames","generateFrameNumbers","end","frameRate","score","scoreText","physics","sprite","setCollideWorldBounds","bullets","group","classType","runChildUpdate","bulletTime","lastFired","enableBody","physicsBodyType","ARCADE","aliens","allowGravity","alienCount","overlap","collisionHandler","body","velocity","setTo","tilePositionY","left","right","bullet","get","alien","destroy","PostScene","_this$game$canvas","clientWidth","config","type","AUTO","parent","default","extend","Invaders","Game","Config","id","App","cabinet","invaders","ReactDOM","render","src_components_App","getElementById"],"mappings":"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","file":"static/js/main.6c0540fc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './style.scss';\n\nclass Joystick extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      direction: 'CENTER'\n    }\n  }\n\n  setDirection = (direction) => {\n    this.setState({ direction })\n  }\n\n  keyup = (event) => {\n    if([37, 38, 39, 40].includes(event.keyCode)){\n      this.setDirection('CENTER')\n    }\n  }\n\n  keydown = (event) => {\n    switch(event.keyCode) {\n      case 38:\n        this.setDirection('UP')\n        break;\n      case 40:\n        this.setDirection('DOWN')\n        break;\n      case 37:\n        this.setDirection('LEFT')\n        break;\n      case 39:\n        this.setDirection('RIGHT')\n        break;\n      default:\n        break;\n    }\n  }\n\n  componentDidMount () {\n    document.addEventListener(\"keydown\", this.keydown, false)\n    document.addEventListener(\"keyup\", this.keyup, false)\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener(\"keydown\", this.keydown, false);\n    document.removeEventListener(\"keyup\", this.keyup, false)\n  }\n\n  render() {\n    return (\n      <div className=\"acd-joystick\">\n        <div className={`acd-joystick__origin acd-joystick--${this.state.direction}`}>\n          <span className=\"acd-joystick__ball\" />\n          <span className=\"acd-joystick__stalk\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Joystick;\n","import React, { Component } from 'react';\nimport './style.scss';\n\nclass Button extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      direction: 'UP'\n    }\n  }\n\n  setDirection = (direction) => {\n    this.setState({ direction })\n  }\n\n  keyup = (event) => {\n    const { keyCode } = this.props;\n    if(event.keyCode === keyCode){\n      this.setDirection('UP')\n    }\n  }\n\n  keydown = (event) => {\n    const { keyCode } = this.props;\n    if(event.keyCode === keyCode){\n      this.setDirection('DOWN')\n    }\n  }\n\n  componentDidMount () {\n    document.addEventListener(\"keydown\", this.keydown, false)\n    document.addEventListener(\"keyup\", this.keyup, false)\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener(\"keydown\", this.keydown, false);\n    document.removeEventListener(\"keyup\", this.keyup, false)\n  }\n\n  render() {\n    return (\n      <span className={`acd-button acd-button--${this.state.direction}`} />\n    );\n  }\n}\n\nexport default Button;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './style.scss';\n\nconst matrix = [\n  [0,0,1,0,0,0,0,0,1,0,0],\n  [0,0,0,1,0,0,0,1,0,0,0],\n  [0,0,1,1,1,1,1,1,1,0,0],\n  [0,1,1,0,1,1,1,0,1,1,0],\n  [1,1,1,1,1,1,1,1,1,1,1],\n  [1,0,1,1,1,1,1,1,1,0,1],\n  [1,0,1,0,0,0,0,0,1,0,1],\n  [0,0,0,1,1,0,1,1,0,0,0],\n]\n\nclass Invader extends PureComponent {\n  render() {\n    return (\n      <div className=\"acd-invader\">\n        {\n          matrix.map((row, i) => {\n            const squares = row.map((row) => {\n              return row ? <span className={`acd-invader-square--${this.props.variant}`} /> :\n                <span className=\"acd-invader-square--clear\" />\n            });\n            return <span className=\"acd-invader-row\">{squares}</span>\n          })\n        }\n      </div>\n    );\n  }\n}\n\nInvader.propTypes = {\n  variant: PropTypes.oneOf(['blue', 'yellow', 'orange', 'pink', 'green']),\n}\n\nexport default Invader;\n","import React, { Component } from 'react';\nimport Joystick from '../joystick';\nimport Button from '../button';\nimport Invader from '../invader';\nimport './style.scss';\n\nclass Cabinet extends Component {\n  render() {\n    return (\n      <div className=\"acd-cabinet\">\n        <div className=\"acd-top\">\n          <h1>SLAMCO</h1>\n          <Invader variant=\"pink\" />\n          <Invader variant=\"green\" />\n          <Invader variant=\"yellow\" />\n          <Invader variant=\"blue\" />\n        </div>\n        <div className=\"acd-window\">\n          <div className=\"acd-screen\">\n            {this.props.children}\n          </div>\n          <Joystick />\n        </div>\n        <div className=\"acd-controls\">\n          <Button keyCode={32} />\n          <Button keyCode={31} />\n          <Button keyCode={30} />\n        </div>\n        <div className=\"acd-front\" />\n      </div>\n    );\n  }\n}\n\nexport default Cabinet;\n","import Phaser from 'phaser';\n\nexport default class BootScene extends Phaser.Scene {\n  constructor () {\n    super('Boot');\n  }\n\n  create () {\n    const {clientHeight} = this.game.canvas;\n    \n    this.add.text(120 , (clientHeight / 2 - 10), 'Press Spacebar To Start');\n    this.input.manager.enabled = true;\n    this.cursors = this.input.keyboard.createCursorKeys();\n  }\n\n  update () {\n    if (this.cursors.space.isDown) {\n      this.scene.start('Game');\n    }\n  }\n};\n","import Phaser from 'phaser';\n\nlet Bullet = new Phaser.Class({\n\n  Extends: Phaser.Physics.Arcade.Sprite,\n\n  initialize:\n\n  function Bullet (scene) {\n    Phaser.Physics.Arcade.Sprite.call(this, scene, 0, 0, 'bullet');\n    this.speed = 0;\n    this.born = 0;\n  },\n\n  fire: function (player) {\n    const {x, y, height} = player;\n\n    this.setPosition(x, y - height);\n    this.speed = Phaser.Math.GetSpeed(-1000, 1);\n    this.born = 0;\n  },\n\n  update: function (time, delta) {\n    this.y += this.speed * delta;\n    this.born += delta;\n\n    if (this.born > 1000) {\n        this.setActive(false);\n        this.setVisible(false);\n    }\n  },\n});\n\nexport default Bullet;\n","import Phaser from 'phaser';\n\nconst Alien = new Phaser.Class({\n\n  Extends: Phaser.Physics.Arcade.Sprite,\n\n  initialize:\n\n  function Alien (scene, x, y, width, height, speed) {\n    Phaser.Physics.Arcade.Sprite.call(this, scene, x, y, 'invader');\n\n    //  This is the path the sprite will follow\n    this.path = new Phaser.Curves.Ellipse(x, y, width, height);\n    this.pathIndex = 0;\n    this.pathSpeed = speed;\n    this.pathVector = new Phaser.Math.Vector2();\n\n    this.path.getPoint(0, this.pathVector);\n\n    this.setPosition(this.pathVector.x, this.pathVector.y);\n  },\n\n  die: function(player){\n    this.anims.play('explode', true);\n    this.on('animationcomplete', () => {\n      this.disableBody(true, true);\n    }, this);\n  },\n\n  preUpdate: function (time, delta) {\n    this.anims.update(time, delta);\n    this.path.getPoint(this.pathIndex, this.pathVector);\n    this.setPosition(this.pathVector.x, this.pathVector.y);\n    this.pathIndex = Phaser.Math.Wrap(this.pathIndex + this.pathSpeed, 0, 1);\n  },\n});\n\nexport default Alien;\n","import Phaser from 'phaser';\nimport Bullet from '../bullet';\nimport Alien from '../alien';\n\nexport default class GameScene extends Phaser.Scene {\n  constructor () {\n    super({ key: 'Game'});\n  }\n\n  preload () {\n    this.load.image('sky', \"/assets/starfield.png\");\n    this.load.image('ship', \"/assets/player.png\");\n    this.load.image('bullet', '/assets/bullet.png');\n    this.load.image('invader', '/assets/invader.png');\n    this.load.spritesheet('explode',\n        'assets/explode.png',\n        { frameWidth: 128, frameHeight: 128 }\n    );\n  }\n\n  create () {\n    this.sky = this.add.tileSprite(200, 200, 512, 512, 'sky');\n\n    // Set up animation effects\n    this.anims.create({\n      key: 'explode',\n      frames: this.anims.generateFrameNumbers('explode', { start: 0, end: 15 }),\n      frameRate: 60,\n    });\n\n    //  The score\n    this.score = 0;\n    this.scoreText = this.add.text(20 , 10, `Score: ${this.score}`);\n\n    // Set up the player\n    this.player = this.physics.add.sprite(200, 250, 'ship');\n    this.player.setCollideWorldBounds(true);\n\n    // Set up the bullets\n    this.bullets = this.physics.add.group({ classType: Bullet, runChildUpdate: true });\n    this.bulletTime = 0;\n    this.lastFired = 0;\n    this.bullets.enableBody = true;\n    this.bullets.physicsBodyType = Phaser.Physics.ARCADE;\n\n    // Set up the Controls\n    this.cursors = this.input.keyboard.createCursorKeys();\n\n    // Set up Aliens\n    this.aliens = this.physics.add.group({ allowGravity: true });\n\n    this.alienCount = 0;\n\n    for (let y = 0; y < 3; y++) {\n      for (let x = 0; x < 10; x++) {\n        this.aliens.add(new Alien(this, x * 48, y * 48, 100, 100, 0.005), true);\n        this.alienCount += 1;\n      }\n    }\n\n    // Add the hit detection\n    this.physics.add.overlap(this.bullets, this.aliens, this.collisionHandler, null, this);\n  }\n\n  update (time) {\n    this.player.body.velocity.setTo(0, 0);\n    this.sky.tilePositionY += 1;\n\n    // Move the player\n    if (this.cursors.left.isDown) {\n      this.player.body.velocity.x = -200;\n    }\n    else if (this.cursors.right.isDown) {\n      this.player.body.velocity.x = 200;\n    }\n\n    // Fire the laser\n    if (this.cursors.space.isDown && time > this.lastFired) {\n      let bullet = this.bullets.get();\n      bullet.setActive(true);\n      bullet.setVisible(true);\n\n      if (bullet) {\n        bullet.fire(this.player);\n        this.lastFired = time + 200;\n      }\n    }\n\n    if (this.alienCount === 0) {\n      this.scene.start('Post');\n    }\n  }\n\n  collisionHandler (bullet, alien) {\n    alien.die();\n    bullet.destroy(true, true);\n    this.alienCount -= 1;\n    this.score = this.score + 100;\n    this.scoreText.text = `Score: ${this.score}`;\n  }\n};\n","import Phaser from 'phaser';\n\nexport default class PostScene extends Phaser.Scene {\n  constructor () {\n    super('Post');\n  }\n\n  create () {\n    const {clientWidth, clientHeight} = this.game.canvas;\n\n    this.add.text((clientWidth / 2 - 40) , (clientHeight / 2 - 10), 'Winner!');\n    this.input.manager.enabled = true;\n    this.cursors = this.input.keyboard.createCursorKeys();\n  }\n\n  update () {\n    if (this.cursors.space.isDown) {\n      // this.scene.start('Game');\n    }\n  }\n};\n","import Phaser from 'phaser';\nimport BootScene from '../scenes/bootScene';\nimport GameScene from '../scenes/gameScene';\nimport PostScene from '../scenes/postScene';\n\nexport default {\n  type: Phaser.AUTO,\n  parent: 'phaser-container',\n  width: 460,\n  height: 307,\n  physics: {\n    default: 'arcade',\n  },\n  scene: [BootScene, GameScene, PostScene],\n  extend: {\n    player: null,\n    cursors: null,\n    bullets: null,\n    lastFired: 0,\n    score: 0,\n  }\n};\n","import React, { Component } from 'react';\nimport Phaser from 'phaser';\nimport Config from './config/config';\n\nclass Invaders extends Component {\n  constructor() {\n    super();\n    this.game = null;\n  }\n\n  componentDidMount () {\n    this.game = new Phaser.Game(Config);\n  }\n\n  render() {\n    return (\n      <div className=\"phaserContainer\" id=\"phaser-container\" />\n    );\n  }\n}\n\nexport default Invaders;\n","import React, { Component } from 'react';\nimport Cabinet from './cabinet';\nimport Invaders from '../games/invaders'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Cabinet>\n          <Invaders />\n        </Cabinet>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}